# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }: {
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f22b001b-efde-466f-8ecd-9fa199208516";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  boot.initrd.luks.devices."crypt1".device = "/dev/disk/by-uuid/4f7ce34b-e627-40cf-b7d4-441991d37b1e";
  boot.initrd.luks.devices."crypt2".device = "/dev/disk/by-uuid/af04631e-f7f8-41d6-b014-8b189dd973fd";

  fileSystems."/backup" =
    { device = "/dev/disk/by-uuid/f22b001b-efde-466f-8ecd-9fa199208516";
      fsType = "btrfs";
      options = [ "subvol=backup" ];
    };

  fileSystems."/persist" =
    { device = "/dev/disk/by-uuid/f22b001b-efde-466f-8ecd-9fa199208516";
      fsType = "btrfs";
      options = [ "subvol=persist" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/f22b001b-efde-466f-8ecd-9fa199208516";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/snapshots" =
    { device = "/dev/disk/by-uuid/f22b001b-efde-466f-8ecd-9fa199208516";
      fsType = "btrfs";
      options = [ "subvol=snapshots" ];
    };

  fileSystems."/raid_root" =
    { device = "/dev/disk/by-uuid/f22b001b-efde-466f-8ecd-9fa199208516";
      fsType = "btrfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9233-F9A0";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/storage_root" =
    { device = "/dev/disk/by-uuid/1ff6e384-f682-46c8-b973-cd6471bd0e34";
      fsType = "btrfs";
    };

  boot.initrd.luks.devices."crypt3".device = "/dev/disk/by-uuid/35733911-bd9b-4126-b5a3-9b9c19aebb21";

  fileSystems."/storage" =
    { device = "/dev/disk/by-uuid/1ff6e384-f682-46c8-b973-cd6471bd0e34";
      fsType = "btrfs";
      options = [ "subvol=storage" ];
    };

  fileSystems."/backups" =
    { device = "/dev/disk/by-uuid/1ff6e384-f682-46c8-b973-cd6471bd0e34";
      fsType = "btrfs";
      options = [ "subvol=backups" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/1ff6e384-f682-46c8-b973-cd6471bd0e34";
      fsType = "btrfs";
      options = [ "subvol=swap" ];
    };

  swapDevices = [ { device = "/swap/swapfile"; size = 17 * 1024; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
